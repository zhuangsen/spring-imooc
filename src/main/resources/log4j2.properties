# 建立名称为 console 和 file 的两个 appender
name=PropertiesConfig
property.filename = logs
appenders = console, file

# 设置两个 appender 的参数，其中 name 是用于之后的 ref 的
# 首先是 console appender
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d %highlight{%-5level}{ERROR=Bright RED, WARN=Bright Yellow, INFO=Bright Green, DEBUG=Bright Cyan, TRACE=Bright White} %style{[%t]}{bright,magenta} %style{%c{1.}.%M(%L)}{cyan}:%msg%n


# 然后是 File appender, 输出路径是 ${filename}/propertieslogs.log
# filename 在前面已经设定为 logs
# 所以输出日志文件是在当前项目根目录下的 logs/propertieslogs.log
appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName=${filename}/propertieslogs.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} %p %c %m%n


# 设置 rootLogger 的记录级别，将 console 和 file 绑定到 rootLogger 上。
rootLogger.level = debug
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.file.ref = LOGFILE

logger.SpringFramework.name=org.springframework
logger.SpringFramework.level=DEBUG
#当有其它框架的也使用了log4j时，会输出相应日志，以下方式为屏蔽其它框架的日志信息（设置日志级别）
#logger.Http.name = org.apache.http
#logger.Http.level = TRACE
# 根记录器，所有记录器的父辈
#rootLogger.level=debug